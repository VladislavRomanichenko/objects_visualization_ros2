cmake_minimum_required(VERSION 3.5)
project(objects_vis VERSION 1.0.0)

if(NOT CMAKE_CXX_STANDARD)
  set(CMAKE_CXX_STANDARD 14)
endif()

if(CMAKE_COMPILER_IS_GNUCXX OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  add_compile_options(-Wall -Wextra -Wpedantic)
endif()

find_package(ament_cmake REQUIRED)
find_package(rclcpp REQUIRED)
find_package(sensor_msgs REQUIRED)
find_package(cv_bridge REQUIRED)
find_package(image_transport REQUIRED)
find_package(OpenCV REQUIRED)
find_package(objects_msgs REQUIRED)
find_package(Eigen3 REQUIRED)
find_package(geometry_msgs REQUIRED)
find_package(tf2_ros REQUIRED)
find_package(visualization_msgs REQUIRED)
find_package(rosidl_typesupport_cpp REQUIRED)

include_directories(${EIGEN3_INCLUDE_DIR})

add_executable(draw_objects src/draw_objects.cpp src/utils.cpp)
ament_target_dependencies(draw_objects rclcpp sensor_msgs cv_bridge image_transport OpenCV objects_msgs geometry_msgs tf2_ros Eigen3)

add_executable(draw_objects3d src/draw_objects3d.cpp src/utils.cpp)
ament_target_dependencies(draw_objects3d rclcpp sensor_msgs cv_bridge image_transport OpenCV objects_msgs geometry_msgs tf2_ros Eigen3)

add_executable(objects2markers src/objects2markers.cpp src/utils.cpp)
ament_target_dependencies(objects2markers rclcpp sensor_msgs cv_bridge image_transport OpenCV objects_msgs geometry_msgs tf2_ros Eigen3 visualization_msgs rosidl_typesupport_cpp)

install(TARGETS
  draw_objects
  draw_objects3d
  objects2markers
  DESTINATION lib/${PROJECT_NAME})

if(BUILD_TESTING)
  find_package(ament_lint_auto REQUIRED)
  # the following line skips the linter which checks for copyrights
  # uncomment the line when a copyright and license is not present in all source files
  #set(ament_cmake_copyright_FOUND TRUE)
  # the following line skips cpplint (only works in a git repo)
  # uncomment the line when this package is not in a git repo
  #set(ament_cmake_cpplint_FOUND TRUE)
  ament_lint_auto_find_test_dependencies()
endif()

ament_package()
